// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
const BASE_URL = 'http://localhost:3000'

async function createTestProduct() {
	console.log('üé® –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ü–†–û–î–£–ö–¢–ê –° –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ï–ô')
	console.log('='.repeat(70))

	// 1. –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
	console.log('\nüë§ –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞...')
	const clientsRes = await fetch(`${BASE_URL}/api/clients`)
	const clients = await clientsRes.json()
	const testClient = clients[0]
	console.log(`‚úÖ –ö–ª–∏–µ–Ω—Ç: ${testClient.firstName} ${testClient.lastName}`)

	// 2. –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
	console.log('\nüìÅ –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	const categoriesRes = await fetch(`${BASE_URL}/api/product-categories`)
	const categories = await categoriesRes.json()
	const windowCategory = categories.find(
		c => c.name === '–û–∫–Ω–∞' || c.name === '–¢–µ—Å—Ç–æ–≤—ã–µ –û–∫–Ω–∞'
	)
	console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${windowCategory.name} (ID: ${windowCategory.id})`)

	// 3. –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	console.log('\nüìã –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	const paramsRes = await fetch(
		`${BASE_URL}/api/category-parameters?categoryId=${windowCategory.id}`
	)
	const categoryParams = await paramsRes.json()
	console.log(`‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: ${categoryParams.length}`)

	// 4. –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
	console.log('\nüè≠ –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞...')
	const supplierCatsRes = await fetch(
		`${BASE_URL}/api/supplier-categories?categoryId=${windowCategory.id}`
	)
	const supplierCategories = await supplierCatsRes.json()

	if (supplierCategories.length === 0) {
		console.log('‚ùå –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!')
		return
	}

	const testSupplierCategory = supplierCategories[0]
	console.log(`‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${testSupplierCategory.supplier.name}`)

	// 5. –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
	console.log('\nüé® –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞...')
	const productConfig = {
		categoryId: windowCategory.id,
		supplierId: testSupplierCategory.supplierId,
		supplierCategoryId: testSupplierCategory.id,
		parameters: {},
		customNotes: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –ø–æ–ª–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π',
	}

	// –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	categoryParams.forEach(cp => {
		const param = cp.parameter
		if (param.type === 'NUMBER') {
			if (param.nameIt === 'Larghezza' || param.name === '–®–∏—Ä–∏–Ω–∞') {
				productConfig.parameters[param.id] = 1400
			} else if (param.nameIt === 'Altezza' || param.name === '–í—ã—Å–æ—Ç–∞') {
				productConfig.parameters[param.id] = 2000
			}
		} else if (param.type === 'COLOR') {
			// –í—ã–±–∏—Ä–∞–µ–º –±–µ–ª—ã–π —Ü–≤–µ—Ç
			const whiteColor = param.values?.find(
				v => v.valueIt === 'Bianco' || v.value === '–ë–µ–ª—ã–π'
			)
			if (whiteColor) {
				productConfig.parameters[param.id] = whiteColor.value
			}
		} else if (param.type === 'SELECT') {
			// –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
			if (param.values && param.values.length > 0) {
				if (param.nameIt === 'Tipo di apertura') {
					// –î–ª—è —Ç–∏–ø–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤—ã–±–∏—Ä–∞–µ–º "–ü–æ–≤–æ—Ä–æ—Ç–Ω–æ-–æ—Ç–∫–∏–¥–Ω–æ–µ"
					const ribalta = param.values.find(v => v.valueIt === 'Ribalta')
					productConfig.parameters[param.id] = ribalta
						? ribalta.value
						: param.values[0].value
				} else {
					productConfig.parameters[param.id] = param.values[0].value
				}
			}
		}
	})

	console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:')
	Object.entries(productConfig.parameters).forEach(([key, value]) => {
		const param = categoryParams.find(cp => cp.parameter.id === key)
		console.log(
			`   - ${param?.parameter.nameIt || param?.parameter.name}: ${value}`
		)
	})

	// 6. –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
	console.log('\nüìÑ –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è...')
	const proposalResponse = await fetch(`${BASE_URL}/api/proposals`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		body: JSON.stringify({
			clientId: testClient.id,
			status: 'draft',
			positions: [
				{
					...productConfig,
					quantity: 2,
					unitPrice: 45000,
					description: '–û–∫–Ω–æ –ü–í–• —Å –ø–æ–≤–æ—Ä–æ—Ç–Ω–æ-–æ—Ç–∫–∏–¥–Ω—ã–º –º–µ—Ö–∞–Ω–∏–∑–º–æ–º',
					vatRate: 22,
				},
			],
		}),
	})

	if (proposalResponse.ok) {
		const proposal = await proposalResponse.json()
		console.log(`‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${proposal.number}`)
		console.log(`   ID: ${proposal.id}`)
		console.log(`   –ü–æ–∑–∏—Ü–∏–π: ${proposal.positions?.length || 1}`)

		console.log('\n' + '='.repeat(70))
		console.log('üéâ –¢–ï–°–¢–û–í–´–ô –ü–†–û–î–£–ö–¢ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!')
		console.log('\nüí° –û–¢–ö–†–û–ô–¢–ï:')
		console.log(`   http://localhost:3000/proposals`)
		console.log(`   –ù–∞–π–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ "${proposal.number}"`)
		console.log(`   –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ—Å–º–æ—Ç—Ä" —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é!`)

		return proposal
	} else {
		const error = await proposalResponse.json()
		console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${JSON.stringify(error)}`)
	}
}

createTestProduct().catch(console.error)
