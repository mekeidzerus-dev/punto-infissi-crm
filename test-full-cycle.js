// –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
const BASE_URL = 'http://localhost:3000'

async function fullCycleTest() {
	console.log('üß™ –ü–û–õ–ù–´–ô –¶–ò–ö–õ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ò–°–¢–ï–ú–´ –ü–ê–†–ê–ú–ï–¢–†–û–í')
	console.log('='.repeat(70))

	// –®–ê–ì 1: –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
	console.log('\nüìÅ –®–ê–ì 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	const categoryResponse = await fetch(`${BASE_URL}/api/product-categories`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		body: JSON.stringify({
			name: '–¢–µ—Å—Ç–æ–≤—ã–µ –û–∫–Ω–∞',
			icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1"><rect x="3" y="3" width="18" height="18" rx="2"/><line x1="12" y1="3" x2="12" y2="21"/><line x1="3" y1="12" x2="21" y2="12"/></svg>',
			description: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
		}),
	})

	if (!categoryResponse.ok) {
		console.log('‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è')
		// –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é
		const categoriesRes = await fetch(`${BASE_URL}/api/product-categories`)
		const categories = await categoriesRes.json()
		var testCategory =
			categories.find(c => c.name === '–¢–µ—Å—Ç–æ–≤—ã–µ –û–∫–Ω–∞') ||
			categories.find(c => c.name.includes('–û–∫–Ω–∞'))
	} else {
		var testCategory = await categoryResponse.json()
		console.log(
			`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${testCategory.name} (ID: ${testCategory.id})`
		)
	}

	// –®–ê–ì 2: –ü–æ–ª—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	console.log('\nüìã –®–ê–ì 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...')
	const paramsResponse = await fetch(`${BASE_URL}/api/parameters`)
	const parameters = await paramsResponse.json()
	console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: ${parameters.length}`)

	const widthParam = parameters.find(p => p.nameIt === 'Larghezza')
	const heightParam = parameters.find(p => p.nameIt === 'Altezza')
	const colorParam = parameters.find(p => p.type === 'COLOR')
	const materialParam = parameters.find(p => p.nameIt === 'Materiale telaio')
	const openingParam = parameters.find(p => p.nameIt === 'Tipo di apertura')

	console.log(`   - –®–∏—Ä–∏–Ω–∞: ${widthParam ? '‚úÖ' : '‚ùå'}`)
	console.log(`   - –í—ã—Å–æ—Ç–∞: ${heightParam ? '‚úÖ' : '‚ùå'}`)
	console.log(
		`   - –¶–≤–µ—Ç: ${colorParam ? '‚úÖ' : '‚ùå'} (${
			colorParam?.values?.length || 0
		} –∑–Ω–∞—á–µ–Ω–∏–π)`
	)
	console.log(
		`   - –ú–∞—Ç–µ—Ä–∏–∞–ª: ${materialParam ? '‚úÖ' : '‚ùå'} (${
			materialParam?.values?.length || 0
		} –∑–Ω–∞—á–µ–Ω–∏–π)`
	)
	console.log(
		`   - –¢–∏–ø –æ—Ç–∫—Ä—ã—Ç–∏—è: ${openingParam ? '‚úÖ' : '‚ùå'} (${
			openingParam?.values?.length || 0
		} –∑–Ω–∞—á–µ–Ω–∏–π)`
	)

	// –®–ê–ì 3: –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	console.log('\nüîó –®–ê–ì 3: –ü—Ä–∏–≤—è–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	const paramsToLink = [
		{ param: widthParam, isRequired: true, order: 0 },
		{ param: heightParam, isRequired: true, order: 1 },
		{ param: materialParam, isRequired: true, order: 2 },
		{ param: colorParam, isRequired: true, order: 3 },
		{ param: openingParam, isRequired: true, order: 4 },
	].filter(p => p.param)

	for (const { param, isRequired, order } of paramsToLink) {
		try {
			await fetch(`${BASE_URL}/api/category-parameters`, {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify({
					categoryId: testCategory.id,
					parameterId: param.id,
					isRequired,
					order,
				}),
			})
			console.log(`   ‚úì –ü—Ä–∏–≤—è–∑–∞–Ω: ${param.nameIt}`)
		} catch (error) {
			console.log(`   ‚ö†Ô∏è  ${param.nameIt} - —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω`)
		}
	}

	// –®–ê–ì 4: –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
	console.log('\nüè≠ –®–ê–ì 4: –°–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...')
	const suppliersRes = await fetch(`${BASE_URL}/api/suppliers`)
	const suppliers = await suppliersRes.json()
	console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${suppliers.length}`)
	const testSuppliers = suppliers.slice(0, 2)
	testSuppliers.forEach((s, i) => {
		console.log(`   ${i + 1}. ${s.name}`)
	})

	// –®–ê–ì 5: –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	console.log('\nüîó –®–ê–ì 5: –ü—Ä–∏–≤—è–∑–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	for (const supplier of testSuppliers) {
		try {
			const linkResponse = await fetch(`${BASE_URL}/api/supplier-categories`, {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify({
					supplierId: supplier.id,
					categoryId: testCategory.id,
					parameters: {}, // –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
				}),
			})
			if (linkResponse.ok) {
				console.log(`   ‚úì –ü—Ä–∏–≤—è–∑–∞–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: ${supplier.name}`)
			}
		} catch (error) {
			console.log(`   ‚ö†Ô∏è  ${supplier.name} - —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω`)
		}
	}

	// –®–ê–ì 6: –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	console.log('\nüìä –®–ê–ì 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
	const categoryParamsRes = await fetch(
		`${BASE_URL}/api/category-parameters?categoryId=${testCategory.id}`
	)
	const categoryParams = await categoryParamsRes.json()
	console.log(`‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryParams.length}`)

	categoryParams.forEach((cp, i) => {
		const required = cp.isRequired ? 'üî¥' : '‚ö™'
		const values = cp.parameter.values?.length || 0
		console.log(
			`   ${i + 1}. ${required} ${cp.parameter.nameIt} (${
				cp.parameter.type
			}) - ${values} –∑–Ω–∞—á–µ–Ω–∏–π`
		)
	})

	// –®–ê–ì 7: –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞
	console.log('\nüé® –®–ê–ì 7: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...')
	const testConfig = {
		categoryId: testCategory.id,
		supplierId: testSuppliers[0].id,
		parameters: {},
	}

	// –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	categoryParams.forEach(cp => {
		const param = cp.parameter
		if (param.type === 'NUMBER') {
			if (param.nameIt === 'Larghezza') {
				testConfig.parameters[param.id] = 1200
			} else if (param.nameIt === 'Altezza') {
				testConfig.parameters[param.id] = 1800
			}
		} else if (param.type === 'SELECT' || param.type === 'COLOR') {
			if (param.values && param.values.length > 0) {
				testConfig.parameters[param.id] = param.values[0].value
			}
		}
	})

	console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:')
	Object.entries(testConfig.parameters).forEach(([key, value]) => {
		const param = categoryParams.find(cp => cp.parameter.id === key)
		console.log(`   - ${param?.parameter.nameIt}: ${value}`)
	})

	// –®–ê–ì 8: –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
	console.log('\n' + '='.repeat(70))
	console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
	console.log(`   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${testCategory.name}`)
	console.log(`   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: ${categoryParams.length}`)
	console.log(`   ‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${testSuppliers.length}`)
	console.log(
		`   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∞: ${
			Object.keys(testConfig.parameters).length
		} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤`
	)

	console.log('\nüéâ –ü–û–õ–ù–´–ô –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!')
	console.log('\nüí° –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:')
	console.log('   –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/proposals')
	console.log(
		`   –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${testCategory.name}"`
	)
	console.log('   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!')

	return {
		category: testCategory,
		parameters: categoryParams,
		suppliers: testSuppliers,
		config: testConfig,
	}
}

fullCycleTest().catch(console.error)
