/**
 * PRICE CALCULATOR - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
 * 
 * –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞:
 * - –†–∞–∑–º–µ—Ä—ã (–ø–ª–æ—â–∞–¥—å)
 * - –ú–∞—Ç–µ—Ä–∏–∞–ª
 * - –û–ø—Ü–∏–∏ (—Ç–∏–ø –æ—Ç–∫—Ä—ã—Ç–∏—è, —Å—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç, —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞)
 */

import { Configuration } from '@/components/product-configurator'

// ============================================
// –¢–ò–ü–´
// ============================================

interface PriceBreakdown {
	basePrice: number // –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞
	sizePrice: number // –¶–µ–Ω–∞ –∑–∞ —Ä–∞–∑–º–µ—Ä (–ø–ª–æ—â–∞–¥—å)
	materialSurcharge: number // –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª
	optionsSurcharge: number // –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –æ–ø—Ü–∏–∏
	total: number // –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞
	details: string[] // –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
}

interface SupplierPricing {
	supplierId: number
	categoryId: string
	basePricePerSqm: number // –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –º¬≤
	materialMultipliers: Record<string, number> // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
	optionPrices: Record<string, number> // –¶–µ–Ω—ã –æ–ø—Ü–∏–π
}

// ============================================
// –¶–ï–ù–û–í–´–ï –¢–ê–ë–õ–ò–¶–´ –ü–û –ü–û–°–¢–ê–í–©–ò–ö–ê–ú
// ============================================

const SUPPLIER_PRICING: SupplierPricing[] = [
	// Venus Design - –ü—Ä–µ–º–∏—É–º –æ–∫–Ω–∞ –∏ –¥–≤–µ—Ä–∏
	{
		supplierId: 1,
		categoryId: 'okna', // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û–∫–Ω–∞"
		basePricePerSqm: 250, // ‚Ç¨250 –∑–∞ –º¬≤
		materialMultipliers: {
			PVC: 1.0, // –ë–∞–∑–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
			Aluminum: 1.5, // +50%
			Wood: 2.0, // +100%
			Combined: 2.5, // +150%
		},
		optionPrices: {
			// –¢–∏–ø –æ—Ç–∫—Ä—ã—Ç–∏—è
			casement: 0, // –ü–æ–≤–æ—Ä–æ—Ç–Ω–æ–µ - –±–∞–∑–æ–≤–æ–µ
			'tilt-turn': 50, // –ü–æ–≤–æ—Ä–æ—Ç–Ω–æ-–æ—Ç–∫–∏–¥–Ω–æ–µ +‚Ç¨50
			sliding: 100, // –†–∞–∑–¥–≤–∏–∂–Ω–æ–µ +‚Ç¨100
			fixed: -30, // –ì–ª—É—Ö–æ–µ -‚Ç¨30

			// –°—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç
			'single-glass': -50, // –û–¥–Ω–æ–∫–∞–º–µ—Ä–Ω—ã–π -‚Ç¨50
			'double-glass': 0, // –î–≤—É—Ö–∫–∞–º–µ—Ä–Ω—ã–π - –±–∞–∑–æ–≤–æ–µ
			'triple-glass': 80, // –¢—Ä–µ—Ö–∫–∞–º–µ—Ä–Ω—ã–π +‚Ç¨80
			'energy-saving': 120, // –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–π +‚Ç¨120

			// –§—É—Ä–Ω–∏—Ç—É—Ä–∞
			basic: 0, // –ë–∞–∑–æ–≤–∞—è
			premium: 100, // –ü—Ä–µ–º–∏—É–º +‚Ç¨100
			smart: 200, // –£–º–Ω–∞—è —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞ +‚Ç¨200
		},
	},
	{
		supplierId: 1,
		categoryId: 'dveri', // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–î–≤–µ—Ä–∏"
		basePricePerSqm: 400, // ‚Ç¨400 –∑–∞ –º¬≤
		materialMultipliers: {
			PVC: 1.0,
			Aluminum: 1.4,
			Wood: 1.8,
			Steel: 1.6,
		},
		optionPrices: {
			// –¢–∏–ø –æ—Ç–∫—Ä—ã—Ç–∏—è
			swing: 0, // –†–∞—Å–ø–∞—à–Ω–∞—è - –±–∞–∑–æ–≤–æ–µ
			sliding: 150, // –†–∞–∑–¥–≤–∏–∂–Ω–∞—è +‚Ç¨150
			folding: 200, // –°–∫–ª–∞–¥–Ω–∞—è +‚Ç¨200

			// –°—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç
			'no-glass': -100, // –ë–µ–∑ —Å—Ç–µ–∫–ª–∞ -‚Ç¨100
			'small-glass': 0, // –ù–µ–±–æ–ª—å—à–æ–µ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏–µ - –±–∞–∑–æ–≤–æ–µ
			'full-glass': 150, // –ü–æ–ª–Ω–æ–µ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏–µ +‚Ç¨150

			// –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
			'standard-lock': 0, // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–º–æ–∫
			'multi-point-lock': 80, // –ú–Ω–æ–≥–æ—Ç–æ—á–µ—á–Ω—ã–π +‚Ç¨80
			'security-class': 200, // –ö–ª–∞—Å—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ +‚Ç¨200
		},
	},
	// Alco Windows - –°—Ä–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç
	{
		supplierId: 2,
		categoryId: 'okna',
		basePricePerSqm: 180, // ‚Ç¨180 –∑–∞ –º¬≤
		materialMultipliers: {
			PVC: 1.0,
			Aluminum: 1.4,
			Wood: 1.7,
		},
		optionPrices: {
			casement: 0,
			'tilt-turn': 40,
			sliding: 80,
			fixed: -20,
			'single-glass': -40,
			'double-glass': 0,
			'triple-glass': 60,
		},
	},
	// PVC Master - –ë—é–¥–∂–µ—Ç–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç
	{
		supplierId: 3,
		categoryId: 'okna',
		basePricePerSqm: 120, // ‚Ç¨120 –∑–∞ –º¬≤
		materialMultipliers: {
			PVC: 1.0,
			Aluminum: 1.3,
		},
		optionPrices: {
			casement: 0,
			'tilt-turn': 30,
			sliding: 60,
			fixed: -15,
			'single-glass': -30,
			'double-glass': 0,
			'triple-glass': 50,
		},
	},
]

// ============================================
// –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –†–ê–°–ß–ï–¢–ê
// ============================================

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function calculateProductPrice(
	config: Configuration
): PriceBreakdown {
	const details: string[] = []

	// 1. –ù–∞–π—Ç–∏ —Ü–µ–Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	const pricing = SUPPLIER_PRICING.find(
		p => p.supplierId === config.supplierId && p.categoryId === config.categoryId
	)

	if (!pricing) {
		// –ï—Å–ª–∏ –Ω–µ—Ç —Ü–µ–Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0
		return {
			basePrice: 0,
			sizePrice: 0,
			materialSurcharge: 0,
			optionsSurcharge: 0,
			total: 0,
			details: ['‚ö†Ô∏è –ù–µ—Ç —Ü–µ–Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'],
		}
	}

	// 2. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–ª–æ—â–∞–¥—å (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑–º–µ—Ä—ã)
	const width = getParameterValue(config, ['width', '—à–∏—Ä–∏–Ω–∞', 'larghezza'])
	const height = getParameterValue(config, ['height', '–≤—ã—Å–æ—Ç–∞', 'altezza'])

	let area = 0
	if (width && height) {
		// –†–∞–∑–º–µ—Ä—ã –≤ –º–º, –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –º¬≤
		area = (width / 1000) * (height / 1000)
		details.push(
			`üìê –†–∞–∑–º–µ—Ä—ã: ${width}√ó${height} –º–º = ${area.toFixed(2)} –º¬≤`
		)
	} else {
		// –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä 1.2–º √ó 1.5–º = 1.8–º¬≤
		area = 1.8
		details.push('üìê –†–∞–∑–º–µ—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ (1.2–º √ó 1.5–º)')
	}

	// 3. –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –ø–ª–æ—â–∞–¥—å
	const basePrice = pricing.basePricePerSqm * area
	details.push(
		`üí∞ –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: ‚Ç¨${pricing.basePricePerSqm}/–º¬≤ √ó ${area.toFixed(2)} –º¬≤ = ‚Ç¨${basePrice.toFixed(2)}`
	)

	// 4. –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª
	const material = getParameterValue(config, [
		'material',
		'–º–∞—Ç–µ—Ä–∏–∞–ª',
		'materiale',
	])
	const materialKey = normalizeValue(material)
	const materialMultiplier = pricing.materialMultipliers[materialKey] || 1.0

	const materialSurcharge =
		materialMultiplier > 1.0
			? basePrice * (materialMultiplier - 1.0)
			: 0

	if (material) {
		details.push(
			`üîß –ú–∞—Ç–µ—Ä–∏–∞–ª: ${material} (√ó${materialMultiplier}) = ${materialSurcharge > 0 ? `+‚Ç¨${materialSurcharge.toFixed(2)}` : '–±–∞–∑–æ–≤—ã–π'}`
		)
	}

	// 5. –ù–∞–¥–±–∞–≤–∫–∏ –∑–∞ –æ–ø—Ü–∏–∏
	let optionsSurcharge = 0
	const params = config.parameters

	Object.entries(params).forEach(([key, value]) => {
		const normalizedValue = normalizeValue(value)
		const optionPrice = pricing.optionPrices[normalizedValue]

		if (optionPrice !== undefined && optionPrice !== 0) {
			optionsSurcharge += optionPrice
			details.push(
				`‚ú® ${key}: ${value} = ${optionPrice > 0 ? '+' : ''}‚Ç¨${optionPrice.toFixed(2)}`
			)
		}
	})

	// 6. –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞
	const total = basePrice * materialMultiplier + optionsSurcharge

	details.push(`\nüíµ –ò–¢–û–ì–û: ‚Ç¨${total.toFixed(2)}`)

	return {
		basePrice,
		sizePrice: basePrice,
		materialSurcharge,
		optionsSurcharge,
		total,
		details,
	}
}

// ============================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø–æ —Ä–∞–∑–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω—ã–º –∫–ª—é—á–∞–º
 */
function getParameterValue(
	config: Configuration,
	possibleKeys: string[]
): number | string | null {
	for (const key of possibleKeys) {
		// –ò—â–µ–º –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –∫–ª—é—á–∞
		if (config.parameters[key] !== undefined) {
			return config.parameters[key]
		}

		// –ò—â–µ–º –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é (case-insensitive)
		const foundKey = Object.keys(config.parameters).find(k =>
			k.toLowerCase().includes(key.toLowerCase())
		)

		if (foundKey) {
			return config.parameters[foundKey]
		}
	}

	return null
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ —Ü–µ–Ω
 */
function normalizeValue(value: string | number | null): string {
	if (value === null || value === undefined) return ''

	return String(value)
		.toLowerCase()
		.replace(/\s+/g, '-')
		.replace(/[–∞—è—ë—é–∏—ã–µ—ç–æ—É√°√†√¢√§√£√•√©√®√™√´√≠√¨√Æ√Ø√≥√≤√¥√∂√µ√∫√π√ª√º]/g, match => {
			const map: Record<string, string> = {
				–∞: 'a',
				—è: 'ya',
				—ë: 'yo',
				—é: 'yu',
				–∏: 'i',
				—ã: 'y',
				–µ: 'e',
				—ç: 'e',
				–æ: 'o',
				—É: 'u',
			}
			return map[match] || match
		})
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
 */
export function getSupplierPricing(
	supplierId: number,
	categoryId: string
): SupplierPricing | null {
	return (
		SUPPLIER_PRICING.find(
			p => p.supplierId === supplierId && p.categoryId === categoryId
		) || null
	)
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ü–µ–Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
 */
export function hasSupplierPricing(
	supplierId: number,
	categoryId: string
): boolean {
	return SUPPLIER_PRICING.some(
		p => p.supplierId === supplierId && p.categoryId === categoryId
	)
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç breakdown —Ü–µ–Ω—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
export function formatPriceBreakdown(breakdown: PriceBreakdown): string {
	return breakdown.details.join('\n')
}

