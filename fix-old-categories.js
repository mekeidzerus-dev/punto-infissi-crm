/**
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–†–´–• –ö–ê–¢–ï–ì–û–†–ò–ô
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —ç–º–æ–¥–∑–∏ –Ω–∞ SVG –∏–∫–æ–Ω–∫–∏
 */

const BASE_URL = 'http://localhost:3000'

const fixes = [
	{
		name: '–î–≤–µ—Ä–∏',
		newIcon:
			'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1"><rect x="4" y="4" width="16" height="16" rx="1"/><circle cx="12" cy="12" r="1.5"/><path d="M12 2v4"/><path d="M12 18v4"/></svg>',
	},
	{
		name: '–û–∫–Ω–∞',
		newIcon:
			'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1"><rect x="4" y="4" width="16" height="16" rx="1"/><line x1="12" y1="4" x2="12" y2="20"/><line x1="4" y1="12" x2="20" y2="12"/></svg>',
	},
]

async function fixCategories() {
	console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —ç–º–æ–¥–∑–∏...\n')

	try {
		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
		const response = await fetch(`${BASE_URL}/api/product-categories`)
		const categories = await response.json()

		for (const fix of fixes) {
			const category = categories.find(c => c.name === fix.name)

			if (category) {
				console.log(`üìù –û–±–Ω–æ–≤–ª—è—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${fix.name}"...`)

				const updateResponse = await fetch(
					`${BASE_URL}/api/product-categories/${category.id}`,
					{
						method: 'PUT',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({
							name: category.name,
							icon: fix.newIcon,
							description: category.description,
						}),
					}
				)

				if (updateResponse.ok) {
					console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${fix.name}" –æ–±–Ω–æ–≤–ª–µ–Ω–∞\n`)
				} else {
					const error = await updateResponse.json()
					console.log(
						`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ "${fix.name}": ${error.error}\n`
					)
				}
			} else {
				console.log(`‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${fix.name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n`)
			}
		}

		console.log('‚ú® –ì–æ—Ç–æ–≤–æ!')
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
	}
}

fixCategories()
