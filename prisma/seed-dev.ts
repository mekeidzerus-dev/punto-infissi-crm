import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
	console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...')

	// –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, —É—á–∏—Ç—ã–≤–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)
	console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')

	// 1. –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
	await prisma.proposalTemplateLink.deleteMany()
	await prisma.proposalPosition.deleteMany()
	await prisma.proposalGroup.deleteMany()
	await prisma.proposalDocument.deleteMany()

	// 2. –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑—ã
	await prisma.orderItem.deleteMany()
	await prisma.order.deleteMany()

	// 3. –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–≤—è–∑–∏
	await prisma.categoryParameter.deleteMany()
	await prisma.supplierParameterOverride.deleteMany()
	await prisma.parameterValue.deleteMany()
	await prisma.parameterTemplate.deleteMany()

	// 4. –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
	await prisma.supplierProductCategory.deleteMany()

	// 5. –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
	await prisma.supplier.deleteMany()
	await prisma.client.deleteMany()

	// 6. –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	await prisma.productCategory.deleteMany()

	// 7. –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–µ—Å—Å–∏–∏
	await prisma.account.deleteMany()
	await prisma.session.deleteMany()
	await prisma.user.deleteMany()

	// 1. –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (NextAuth –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π)
	console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...')
	const admin = await prisma.user.create({
		data: {
			email: 'admin@puntoinfissi.it',
			name: 'Amministratore',
			role: 'admin',
			emailVerified: new Date(),
		},
	})

	// 2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Porte Interne"
	console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Porte Interne"...')
	const category = await prisma.productCategory.create({
		data: {
			name: 'Porte Interne',
			description: 'Porte per interni di alta qualit√†',
			icon: 'üö™',
			isActive: true,
		},
	})

	// 3. –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	console.log('‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...')

	// –ü–∞—Ä–∞–º–µ—Ç—Ä: –ú–∞—Ç–µ—Ä–∏–∞–ª
	const materialParam = await prisma.parameterTemplate.create({
		data: {
			name: '–ú–∞—Ç–µ—Ä–∏–∞–ª',
			nameIt: 'Materiale',
			type: 'SELECT',
			description: '–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –¥–≤–µ—Ä–∏',
			isGlobal: true,
			isActive: true,
		},
	})

	await prisma.parameterValue.createMany({
		data: [
			{
				parameterId: materialParam.id,
				value: '–ú–∞—Å—Å–∏–≤ –¥–µ—Ä–µ–≤–∞',
				valueIt: 'Legno massello',
				order: 1,
			},
			{
				parameterId: materialParam.id,
				value: '–õ–∞–º–∏–Ω–∞—Ç',
				valueIt: 'Laminato',
				order: 2,
			},
			{ parameterId: materialParam.id, value: '–ú–î–§', valueIt: 'MDF', order: 3 },
			{
				parameterId: materialParam.id,
				value: '–ó–∞–∫–∞–ª–µ–Ω–Ω–æ–µ —Å—Ç–µ–∫–ª–æ',
				valueIt: 'Vetro temperato',
				order: 4,
			},
			{
				parameterId: materialParam.id,
				value: '–ê–ª—é–º–∏–Ω–∏–π',
				valueIt: 'Alluminio',
				order: 5,
			},
		],
	})

	// –ü–∞—Ä–∞–º–µ—Ç—Ä: –†–∞–∑–º–µ—Ä—ã
	const sizeParam = await prisma.parameterTemplate.create({
		data: {
			name: '–†–∞–∑–º–µ—Ä—ã',
			nameIt: 'Dimensioni',
			type: 'SELECT',
			description: '–†–∞–∑–º–µ—Ä—ã –¥–≤–µ—Ä–∏',
			unit: '—Å–º',
			isGlobal: true,
			isActive: true,
		},
	})

	await prisma.parameterValue.createMany({
		data: [
			{
				parameterId: sizeParam.id,
				value: '70x200 —Å–º',
				valueIt: '70x200 cm',
				order: 1,
			},
			{
				parameterId: sizeParam.id,
				value: '80x200 —Å–º',
				valueIt: '80x200 cm',
				order: 2,
			},
			{
				parameterId: sizeParam.id,
				value: '90x200 —Å–º',
				valueIt: '90x200 cm',
				order: 3,
			},
			{
				parameterId: sizeParam.id,
				value: '100x200 —Å–º',
				valueIt: '100x200 cm',
				order: 4,
			},
		],
	})

	// –ü–∞—Ä–∞–º–µ—Ç—Ä: –¶–≤–µ—Ç
	const colorParam = await prisma.parameterTemplate.create({
		data: {
			name: '–¶–≤–µ—Ç',
			nameIt: 'Colore',
			type: 'COLOR',
			description: '–¶–≤–µ—Ç –¥–≤–µ—Ä–∏',
			isGlobal: true,
			isActive: true,
		},
	})

	await prisma.parameterValue.createMany({
		data: [
			{
				parameterId: colorParam.id,
				value: '–ë–µ–ª—ã–π',
				valueIt: 'Bianco',
				hexColor: '#FFFFFF',
				order: 1,
			},
			{
				parameterId: colorParam.id,
				value: '–û—Ä–µ—Ö',
				valueIt: 'Noce',
				hexColor: '#8B4513',
				order: 2,
			},
			{
				parameterId: colorParam.id,
				value: '–î—É–±',
				valueIt: 'Rovere',
				hexColor: '#D2B48C',
				order: 3,
			},
			{
				parameterId: colorParam.id,
				value: '–°–µ—Ä—ã–π',
				valueIt: 'Grigio',
				hexColor: '#808080',
				order: 4,
			},
			{
				parameterId: colorParam.id,
				value: '–ß–µ—Ä–Ω—ã–π',
				valueIt: 'Nero',
				hexColor: '#000000',
				order: 5,
			},
		],
	})

	// –ü–∞—Ä–∞–º–µ—Ç—Ä: –°—Ç–µ–∫–ª–æ
	const glassParam = await prisma.parameterTemplate.create({
		data: {
			name: '–°—Ç–µ–∫–ª–æ',
			nameIt: 'Vetro',
			type: 'BOOLEAN',
			description: '–ù–∞–ª–∏—á–∏–µ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –≤—Å—Ç–∞–≤–æ–∫',
			isGlobal: true,
			isActive: true,
		},
	})

	// –ü–∞—Ä–∞–º–µ—Ç—Ä: –£—Å—Ç–∞–Ω–æ–≤–∫–∞
	const installationParam = await prisma.parameterTemplate.create({
		data: {
			name: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞',
			nameIt: 'Installazione',
			type: 'BOOLEAN',
			description: '–í–∫–ª—é—á–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å',
			isGlobal: true,
			isActive: true,
		},
	})

	// –ü—Ä–∏–≤—è–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	await prisma.categoryParameter.createMany({
		data: [
			{
				categoryId: category.id,
				parameterId: materialParam.id,
				isRequired: true,
				order: 1,
				displayNameIt: 'Materiale',
			},
			{
				categoryId: category.id,
				parameterId: sizeParam.id,
				isRequired: true,
				order: 2,
				displayNameIt: 'Dimensioni',
			},
			{
				categoryId: category.id,
				parameterId: colorParam.id,
				isRequired: true,
				order: 3,
				displayNameIt: 'Colore',
			},
			{
				categoryId: category.id,
				parameterId: glassParam.id,
				isRequired: false,
				order: 4,
				displayNameIt: 'Vetro',
			},
			{
				categoryId: category.id,
				parameterId: installationParam.id,
				isRequired: false,
				order: 5,
				displayNameIt: 'Installazione',
			},
		],
	})

	// 4. –°–æ–∑–¥–∞–Ω–∏–µ 5 –∫–ª–∏–µ–Ω—Ç–æ–≤
	console.log('üë• –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤...')

	const clients = await Promise.all([
		prisma.client.create({
			data: {
				type: 'individual',
				firstName: 'Marco',
				lastName: 'Rossi',
				email: 'marco.rossi@email.it',
				phone: '+39 333 1234567',
				address: 'Via Roma 15, Milano',
				codiceFiscale: 'RSSMRC80A01F205X',
				notes: 'Cliente privato, interessato a porte interne moderne',
			},
		}),
		prisma.client.create({
			data: {
				type: 'company',
				companyName: 'Bianchi Costruzioni SRL',
				firstName: 'Giuseppe',
				lastName: 'Bianchi',
				email: 'giuseppe.bianchi@email.it',
				phone: '+39 333 2345678',
				address: 'Corso Vittorio Emanuele 42, Roma',
				partitaIVA: 'IT12345678901',
				legalAddress: 'Corso Vittorio Emanuele 42, 00100 Roma',
				contactPerson: 'Giuseppe Bianchi',
				notes: '–ö–æ–º–ø–∞–Ω–∏—è-–∑–∞—Å—Ç—Ä–æ–π—â–∏–∫, –∫—Ä—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã',
			},
		}),
		prisma.client.create({
			data: {
				type: 'individual',
				firstName: 'Anna',
				lastName: 'Verdi',
				email: 'anna.verdi@email.it',
				phone: '+39 333 3456789',
				address: 'Piazza Duomo 8, Firenze',
				codiceFiscale: 'VRDNNA85M50D612K',
				notes: '–ß–∞—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç, —Ä–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã',
			},
		}),
		prisma.client.create({
			data: {
				type: 'company',
				companyName: 'Ferrari Edilizia SPA',
				firstName: 'Luigi',
				lastName: 'Ferrari',
				email: 'luigi.ferrari@email.it',
				phone: '+39 333 4567890',
				address: 'Via Garibaldi 23, Napoli',
				partitaIVA: 'IT98765432109',
				legalAddress: 'Via Garibaldi 23, 80100 Napoli',
				contactPerson: 'Luigi Ferrari',
				notes: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–∫–∞–∑—ã',
			},
		}),
		prisma.client.create({
			data: {
				type: 'individual',
				firstName: 'Francesca',
				lastName: 'Colombo',
				email: 'francesca.colombo@email.it',
				phone: '+39 333 5678901',
				address: 'Viale Europa 56, Torino',
				codiceFiscale: 'CLMFNC90D45L219Y',
				notes: '–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤, –ø–æ–¥–±–æ—Ä –¥–≤–µ—Ä–µ–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞',
			},
		}),
	])

	// 5. –°–æ–∑–¥–∞–Ω–∏–µ 5 –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
	console.log('üè≠ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...')

	const suppliers = await Promise.all([
		prisma.supplier.create({
			data: {
				name: 'Porte Italiane SRL',
				email: 'info@porteitaliane.it',
				phone: '+39 02 1234567',
				address: 'Via Industriale 100, Milano',
				partitaIVA: 'IT11111111111',
				legalAddress: 'Via Industriale 100, 20100 Milano',
				contactPerson: 'Roberto Mancini',
				paymentTerms: '30 giorni fine mese',
				deliveryDays: 15,
				rating: 5,
				status: 'active',
				notes: 'Fornitore principale per porte interne di alta qualit√†',
			},
		}),
		prisma.supplier.create({
			data: {
				name: 'LegnoQualit√† SPA',
				email: 'vendite@legnoqualita.it',
				phone: '+39 06 2345678',
				address: 'Strada Provinciale 45, Roma',
				partitaIVA: 'IT22222222222',
				legalAddress: 'Strada Provinciale 45, 00100 Roma',
				contactPerson: 'Giulia Bellini',
				paymentTerms: '60 giorni data fattura',
				deliveryDays: 20,
				rating: 5,
				status: 'active',
				notes: 'Specializzato in legno massello',
			},
		}),
		prisma.supplier.create({
			data: {
				name: 'ModernDoor Italia',
				email: 'commerciale@moderndoor.it',
				phone: '+39 055 3456789',
				address: 'Via Artigianale 78, Firenze',
				partitaIVA: 'IT33333333333',
				legalAddress: 'Via Artigianale 78, 50100 Firenze',
				contactPerson: 'Alessandro Conti',
				paymentTerms: '30 giorni data fattura',
				deliveryDays: 10,
				rating: 4,
				status: 'active',
				notes: 'Design moderno e contemporaneo',
			},
		}),
		prisma.supplier.create({
			data: {
				name: 'VetroPorte Design',
				email: 'info@vetroportedesign.it',
				phone: '+39 081 4567890',
				address: 'Corso Meridionale 234, Napoli',
				partitaIVA: 'IT44444444444',
				legalAddress: 'Corso Meridionale 234, 80100 Napoli',
				contactPerson: 'Simona Ricci',
				paymentTerms: '45 giorni fine mese',
				deliveryDays: 25,
				rating: 5,
				status: 'active',
				notes: 'Specialista porte con vetro',
			},
		}),
		prisma.supplier.create({
			data: {
				name: 'PremiumPorte Group',
				email: 'sales@premiumporte.it',
				phone: '+39 011 5678901',
				address: 'Via Torino 156, Torino',
				partitaIVA: 'IT55555555555',
				legalAddress: 'Via Torino 156, 10100 Torino',
				contactPerson: 'Davide Moretti',
				paymentTerms: '30 giorni data fattura',
				deliveryDays: 12,
				rating: 5,
				status: 'active',
				notes: 'Soluzioni premium, alta gamma',
			},
		}),
	])

	// 6. –°–≤—è–∑—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
	console.log('üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫-–∫–∞—Ç–µ–≥–æ—Ä–∏—è...')

	await Promise.all(
		suppliers.map((supplier, index) =>
			prisma.supplierProductCategory.create({
				data: {
					supplierId: supplier.id,
					categoryId: category.id,
					parameters: {
						basePrice: 500 + index * 100, // 500, 600, 700, 800, 900 –µ–≤—Ä–æ
						priceMultiplier: 1 + index * 0.05, // 1.0, 1.05, 1.10, 1.15, 1.20
						deliveryDays: 7 + index * 3, // 7, 10, 13, 16, 19 –¥–Ω–µ–π
						minOrder: 1,
						discount: index * 2, // 0%, 2%, 4%, 6%, 8%
						specialty:
							index === 0
								? 'alta qualit√†'
								: index === 1
								? 'legno massello'
								: index === 2
								? 'design moderno'
								: index === 3
								? 'porte con vetro'
								: 'soluzioni premium',
					},
					isActive: true,
				},
			})
		)
	)

	console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!')
	console.log('\nüìä –°–û–ó–î–ê–ù–û:')
	console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
	console.log(`   üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@puntoinfissi.it (–ø–∞—Ä–æ–ª—å: admin123)`)
	console.log(`   üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: 1 (Porte Interne üö™)`)
	console.log(
		`   ‚öôÔ∏è  –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: 5 (–ú–∞—Ç–µ—Ä–∏–∞–ª, –†–∞–∑–º–µ—Ä—ã, –¶–≤–µ—Ç, –°—Ç–µ–∫–ª–æ, –£—Å—Ç–∞–Ω–æ–≤–∫–∞)`
	)
	console.log(
		`   üíé –ó–Ω–∞—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: ${5 + 4 + 5} (–ú–∞—Ç–µ—Ä–∏–∞–ª: 5, –†–∞–∑–º–µ—Ä—ã: 4, –¶–≤–µ—Ç: 5)`
	)
	console.log(`   üë• –ö–ª–∏–µ–Ω—Ç–æ–≤: ${clients.length} (3 —á–∞—Å—Ç–Ω—ã—Ö, 2 –∫–æ–º–ø–∞–Ω–∏–∏)`)
	console.log(`   üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${suppliers.length}`)
	console.log(`   üîó –°–≤—è–∑–µ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫-–∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${suppliers.length}`)
	console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
	console.log('\nüéØ –¢–ï–ü–ï–†–¨ –ú–û–ñ–ï–®–¨:')
	console.log('   ‚úÖ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É (admin@puntoinfissi.it / admin123)')
	console.log('   ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤')
	console.log('   ‚úÖ –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–æ–º')
	console.log('   ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤')
	console.log('\nüöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!')
}

main()
	.catch(e => {
		console.error('‚ùå –û—à–∏–±–∫–∞:', e)
		process.exit(1)
	})
	.finally(async () => {
		await prisma.$disconnect()
	})
